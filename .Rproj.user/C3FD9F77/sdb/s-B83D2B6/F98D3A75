{
    "collab_server" : "",
    "contents" : "install.packages(c(\"dplyr\", \"tidyr\", \"RSQLite\"))\n\nlibrary(dplyr)\nlibrary(tidyr)\n\n# DATA WRANGLING CHEAT SHEET http://www.rstudio.com/wp-content/uploads/2015/02/data-wrangling-cheatsheet.pdf\n\n# https://cran.rstudio.com/web/packages/dplyr/vignettes/introduction.html\n# https://cran.r-project.org/web/packages/tidyr/vignettes/tidy-data.html\n# PODGLĄDANIE DANYCH\niris\n\niris_ <- tbl_df(iris)\niris_\n\nglimpse(iris_)\n\n# PRZEFASONOWYWANIE DANYCH\ndistinct(iris_)\niris2 <- add_rownames(iris)\niris2\n\niris_long <- gather(iris2, variable, value, -rowname)\nView(iris_long)\n\niris_wide <- spread(iris_long, variable, value)\narrange(iris_wide, rowname)\narrange(iris_wide, as.numeric(rowname))\narrange(iris_wide, desc(as.numeric(rowname)))\n\niris_united <- unite(iris2, Petal, Petal.Length, Petal.Width, sep='_')\niris_united\nseparate(iris_united, Petal, c('Petal.Length', 'Petal.Width'), sep='_')\n\n# WYBIERANIE RZĘDÓW\nfilter(iris2, Sepal.Width > 3)\ndistinct(iris2)\nsample_n(iris2, 10)\nsample_frac(iris2, .1)\nsample_frac(iris2, 1, replace = T)\nslice(iris2, 3:6)\n\n# WYBIERANIE KOLUMN\niris2\nselect(iris2, Petal.Length, Species)\nselect(iris2, -rowname)\nselect(iris2, pl=Petal.Length, sp=Species)\n\n\nselect(iris2, Sepal.Length:Petal.Length)\nselect(iris2, contains('.'))\nselect(iris2, starts_with('Petal'))\nselect(iris2, ends_with('Length'))\nselect(iris2, one_of(c('Petal.Length', 'pl')))\n\n# PODSUMOWYWANIE\nsummarise(iris2, mean_sl = mean(Sepal.Length), mean_sw = mean(Sepal.Width))\nsummarise_each(iris2, funs(mean, median), starts_with('Sepal'))\n\nsmr <- summarise(iris2, \n                 first(Sepal.Length), \n                 last(Sepal.Length),\n                 nth(Sepal.Length, 3),\n                 IQR(Sepal.Length),\n                 min(Sepal.Length),\n                 max(Sepal.Length),\n                 mean(Sepal.Length),\n                 median(Sepal.Length),\n                 var(Sepal.Length),\n                 sd(Sepal.Length),\n                 n(),\n                 n_distinct(Species))\nView(smr)\n\n# DODAWANIE NOWYCH ZMIENNYCH\nmutate(iris2, sepal = Sepal.Length + Sepal.Width)\nmutate_each(iris2, funs(sqrt), ends_with('Width'))\ntransmute(iris2, \n          sepal = Sepal.Length + Sepal.Width,\n          petal = Petal.Length + Petal.Width)\n\ntransmute(iris2,\n          Sepal.Length,\n          lag(Sepal.Length),\n          lead(Sepal.Length))\n\ntransmute(arrange(iris2, Sepal.Length),\n          Sepal.Length,\n          dense_rank(Sepal.Length),\n          min_rank(Sepal.Length),\n          percent_rank(Sepal.Length),\n          cume_dist(Sepal.Length),\n          row_number(),\n          ntile(Sepal.Length, 30))\n\ntransmute(arrange(iris2, Sepal.Length),\n          Sepal.Length,\n          cumall(Sepal.Length < 4.6),\n          cumany(Sepal.Length > 4.4),\n          cummean(Sepal.Length),\n          cumprod(Sepal.Length))\n\ntransmute(arrange(iris2, Sepal.Length),\n          Sepal.Width,\n          Sepal.Length,\n          min(Sepal.Length, Sepal.Width),\n          pmin(Sepal.Length, Sepal.Width))\n\nmutate(sample_frac(iris2, 1), \n       n(),\n       Species == 'setosa',\n       ecdf(Sepal.Length)(Sepal.Length),\n       cume_dist(Sepal.Length))\n\n# GRUPOWANIE\niris_grouped <- group_by(iris2, Species)\niris_grouped\n\nsmr_grouped <- summarise(iris_grouped, \n                 first(Sepal.Length), \n                 last(Sepal.Length),\n                 nth(Sepal.Length, 3),\n                 IQR(Sepal.Length),\n                 min(Sepal.Length),\n                 max(Sepal.Length),\n                 mean(Sepal.Length),\n                 median(Sepal.Length),\n                 var(Sepal.Length),\n                 sd(Sepal.Length),\n                 n(),\n                 n_distinct(Species))\nView(smr_grouped)\n\n# https://cran.r-project.org/web/packages/dplyr/vignettes/window-functions.html\nmutate(iris_grouped, Sepal.Length/mean(Sepal.Length))\nfilter(iris_grouped, Sepal.Length > mean(Sepal.Length))\n\n# OPERACJE DWUTABELOWE\n# Joiny dodające nowe kolumny\ninner_join(iris2, smr_grouped)\ninner_join(rename(iris2, species = Species), smr_grouped)\ninner_join(rename(iris2, species = Species), smr_grouped, by = c('species'='Species'))\n\ninner_join(filter(iris2, Species != 'virginica'), \n           filter(smr_grouped, Species != 'setosa'))\nleft_join(filter(iris2, Species != 'virginica'), \n          filter(smr_grouped, Species != 'setosa'))\nright_join(filter(iris2, Species != 'virginica'), \n           filter(smr_grouped, Species != 'setosa'))\nfull_join(filter(iris2, Species != 'virginica'), \n          filter(smr_grouped, Species != 'setosa'))\n\n# Joiny filtrujące\nsemi_join(filter(iris2, Species != 'virginica'), \n          filter(smr_grouped, Species != 'setosa'))\nanti_join(filter(iris2, Species != 'virginica'), \n          filter(smr_grouped, Species != 'setosa'))\n\n# Operacje na zbiorach\nfilter(iris2, Sepal.Length < 6) \nfilter(iris2, Sepal.Length > 5)\nintersect(filter(iris2, Sepal.Length < 6),\n          filter(iris2, Sepal.Length > 5))\nsetdiff(filter(iris2, Sepal.Length < 6),\n        filter(iris2, Sepal.Length > 5))\nunion(filter(iris2, Sepal.Length < 6), \n      filter(iris2, Sepal.Length > 5))\n\n# Sklejanie\nbind_rows(iris2, iris2)\nbind_cols(iris2,\n          transmute(iris2, \n                    sepal = Sepal.Length + Sepal.Width,\n                    petal = Petal.Length + Petal.Width))\n\n# !!!!!!!!!!!!!!!!!!!!!!!!!!\n# PIPING\n# !!!!!!!!!!!!!!!!!!!!!!!!!!\n\nplot(iris)\nglm(Petal.Length ~ Sepal.Length + Sepal.Width, data = iris)\n\n# jest równoważne do:\niris %>% plot()\niris %>% glm(Petal.Length ~ Sepal.Length + Sepal.Width, data = .)\n\n# ale po co to komu?\niris_grouped <- group_by(iris, Species)\niris_summarised <- summarise(iris_grouped, avg = mean(Sepal.Width))\niris_arranged <- arrange(iris_summarised, avg)\n\narrange(\n  summarise(group_by(iris, Species), \n            avg = mean(Sepal.Width)), \n  avg)\n\niris %>%\n  group_by(Species) %>%\n  summarise(avg = mean(Sepal.Width)) %>%\n  arrange(avg)\n\n# (NIE)STANDARDOWA EWALUACJA \n# https://cran.r-project.org/web/packages/dplyr/vignettes/nse.html\nsummarise(iris_grouped, mean(Sepal.Length))\nsummarise_(iris_grouped, ~mean(Sepal.Length))\nsummarise_(iris_grouped, quote(mean(Sepal.Length)))\nsummarise_(iris_grouped, 'mean(Sepal.Length)')\n\n# I można z tym (prawie) wszystkim wynieść się na bazę danych!\n# https://cran.r-project.org/web/packages/dplyr/vignettes/databases.html\nlibrary(RSQLite)\nmy_db <- src_sqlite(\"my_db.sqlite3\", create = T)\n\niris_sqlite <- copy_to(my_db, iris, temporary = F)\nt <- tbl(my_db, sql(\"SELECT * FROM iris where Species <> 'setosa'\"))\nt\ncollect(t)\n\nfilter(iris_sqlite, Species != 'setosa')\ncollect(filter(iris_sqlite, Species != 'setosa'))\n",
    "created" : 1487001420105.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4176248648",
    "id" : "F98D3A75",
    "lastKnownWriteTime" : 1487001859,
    "last_content_update" : 1487001859247,
    "path" : "~/GitHub/STWUREK/R.R",
    "project_path" : "R.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}